% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/qSig-methods.R
\docType{methods}
\name{qSig}
\alias{qSig}
\alias{qSig,list,character,character-method}
\alias{qSig,matrix,character,character-method}
\title{qSig method}
\usage{
qSig(query, gess_method, refdb)

\S4method{qSig}{list,character,character}(query, gess_method, refdb)

\S4method{qSig}{matrix,character,character}(query, gess_method, refdb)
}
\arguments{
\item{query}{When 'gess_method' is 'CMAP' or 'LINCS', 
it should be a list of two elements, which are labels of up and down 
regulated genes. The labels should be gene Entrez ids if the reference
database is pre-built CMAP or LINCS database. If custom database is used,
the labels should share identifiers with the reference database.

When 'gess_method' is 'gCMAP', the query is a matrix with a single column
representing gene ranks from a biological state of interest. The 
corresponding gene labels are stored in the row name slot of the matrix. 
Instead of ranks one can provide scores (e.g. z-scores). In such case 
the scores will be internally transformed to ranks. 

If 'gess_method' is 'Fisher', the query could be a list of two 
elements (up and down gene labels) as with 'CMAP' or 'LINCS' method. In 
this case, genes in up and down sets are combined into a single gene set
for Fisher's exact test with reference gene sets, which means genes in 
the query set are unsigned. The query could also be a matrix with a single 
numeric column and the gene labels (e.g. Entrez gene ids) in the row name 
slot from a biological state of interest. The scores could be z-scores 
or LFC scores. In this case, the actual gene set query is obtained by 
setting the higher and lower cutoffs. 

If 'gess_method' is 'Cor', the query is a matrix with a single 
numeric column and the gene labels in the row name slot.
The scores could be z-scores, LFC scores or gene expression intensity values 
or read counts for correlation-based method.}

\item{gess_method}{one of 'CMAP', 'LINCS', 'gCMAP', 'Fisher' or 'Cor'}

\item{refdb}{character(1), can be one of "cmap", "cmap_expr", "lincs", or 
"lincs_expr" if users want to use the existing CMAP/LINCS databases. If 
'refdb' is 'cmap', it is a collection of signatures of LFC scores
after DE analysis. If 'cmap_expr', it is CMAP database 
consists of normalized gene expression values. If 'refdb' is 'lincs', 
it is LINCS database consists of z-scores after DE analysis, 
if 'lincs_expr', it is LINCS database consists of normalized expression 
values.

If users want to use the custom signature database, 
it should be the file path to the HDF5 file generated with 
\code{\link{build_custom_db}} function or
generated from the source files of CMAP/LINCS databases according to 
the vignette in \pkg{signatureSearchData} package. The HDF5 file contains 
the reference signatures that the query signature is searched against.}
}
\value{
\code{qSig} object
}
\description{
Generate \code{qSig} object used for GESS methods
}
\examples{
db_path <- system.file("extdata", "sample_db.h5", 
package = "signatureSearch")
# Load sample_db as `SummarizedExperiment` object
library(signatureSearchData)
sample_db <- readHDF5chunk(db_path, colindex=1:100)
# get "vorinostat__SKB__trt_cp" signature drawn from sample database
query_mat <- as.matrix(assay(sample_db[,"vorinostat__SKB__trt_cp"]))
query = as.numeric(query_mat); names(query) = rownames(query_mat)
upset <- head(names(query[order(-query)]), 150)
downset <- tail(names(query[order(-query)]), 150)
qsig_lincs <- qSig(query=list(upset=upset, downset=downset), 
                   gess_method="LINCS", refdb=db_path)
qsig_gcmap <- qSig(query=query_mat, gess_method="gCMAP", refdb=db_path)
}
\seealso{
\code{\link{build_custom_db}}, 
\code{\link[signatureSearchData]{signatureSearchData}}
}
