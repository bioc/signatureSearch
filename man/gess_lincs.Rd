% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gess_lincs.R
\name{gess_lincs}
\alias{gess_lincs}
\title{LINCS method for GESS}
\usage{
gess_lincs(qSig, tau = FALSE, sortby = "NCS", chunk_size = 5000)
}
\arguments{
\item{qSig}{`qSig` object, The 'gess_method' slot should be 'LINCS'}

\item{tau}{TRUE or FALSE, whether to compute the tau score. It is only 
meaningful when the "refdb" in "qSig" is LINCS database since the reference
queries we generated for computing tau score are from LINCS database.}

\item{sortby}{rank the GESS result by one of the following scores: 
`WTCS`, `NCS`, `Tau`, `NCSct` or `NA`}

\item{chunk_size}{size of chunk per processing}
}
\value{
\code{\link{gessResult}} object, containing drugs in the reference 
database ranked by their similarity to the query signature
}
\description{
It uses query signature to search against the reference database in the 
\code{\link{qSig}} object by LINCS method, which is an implementation of the 
method from Subramanian et al, 2017.
}
\details{
Subramanian et al., 2017 introduced a new GESS method (\code{LINCS}) that is 
similar with the CMAP method but weights genes in the query set by using 
expression profiles with scores instead of rank transformed as reference 
database. Since now, no implementations of this algorithm available, it is 
implemented here. 

The LINCS method takes about 1 min on a single CPU core for querying 
with a single signature against 10,000 signatures in the LINCS database.

Description of the score columns in the gess_lincs result table:
\itemize{
  \item WTCS: Weighted Connectivity Score, a bi-directional Enrichment 
  Score for an up/down query set. If the ES values of an up set and a down 
  set are of different signs, then WTCS is (ESup-ESdown)/2, otherwise, 
  it is 0. WTCS values range from -1 to 1. They are positive or negative 
  for signatures that are positively or inversely related, respectively, 
  and close to zero for signatures that are unrelated.
  \item WTCS_Pval: Nominal p-value of WTCS computed by comparing WTCS 
  against a null distribution of WTCS values obtained from a large number
  of random queries (e.g. 1000).
  \item WTCS_FDR: False discovery rate of WTCS_Pval.
  \item NCS: Normalized Connectivity Score. To make connectivity scores 
  comparable across cell types and perturbation types, 
  the scores are normalized. Given a vector of WTCS 
  values w resulting from a query, the values are normalized within each 
  cell line c and perturbagen type t to obtain (NCS) by dividing the WTCS 
  value with signed mean of the WTCS values within 
  the subset of signatures in reference database corresponding to c and t.
  \item Tau: Enrichment score standardized for a given database. 
  Tau score compares an observed NCS to a large set of NCS values that have 
  been pre-computed for a specific reference database. The query results 
  are scored with Tau as a standardized measure ranging from 100 to -100. 
  A Tau of 90 indicates that only 10% of reference perturbations exhibit 
  stronger connectivity to the query. This way one can make more meaningful 
  comparisons across query results.
  \item TauRefSize: Size of reference perturbations for computing Tau.
  \item NCSct: NCS summarized across cell types. Given a vector of NCS values
  for perturbagen p, relative to query q, across all cell lines c in which p 
  was profiled, a cell-summarized connectivity score is obtained using a 
  maximum quantile statistic. It compares the 67 and 33 quantiles of 
  NCSp,c and retains whichever is of higher absolute magnitude.
}
}
\examples{
db_path <- system.file("extdata", "sample_db.h5", 
                       package = "signatureSearch")
library(signatureSearchData)
sample_db <- readHDF5chunk(db_path, colindex=1:100)
## get "vorinostat__SKB__trt_cp" signature drawn from sample databass
query_mat <- as.matrix(assay(sample_db[,"vorinostat__SKB__trt_cp"]))
query = as.numeric(query_mat); names(query) = rownames(query_mat)
upset <- head(names(query[order(-query)]), 150)
downset <- tail(names(query[order(-query)]), 150)
qsig_lincs <- qSig(query = list(upset=upset, downset=downset), 
                   gess_method = "LINCS", refdb = db_path)
lincs <- gess_lincs(qsig_lincs, sortby="NCS", tau=FALSE)
result(lincs)
}
\references{
For detailed description of the LINCS method and scores, 
please refer to: Subramanian, A., Narayan, R., Corsello, S. M., Peck, D. D., 
Natoli, T. E., Lu, X., … Golub, T. R. (2017). A Next Generation 
Connectivity Map: L1000 Platform and the First 1,000,000 Profiles. Cell, 
171(6), 1437–1452.e17. \url{https://doi.org/10.1016/j.cell.2017.10.049}
}
\seealso{
\code{\link{qSig}}, \code{\link{gessResult}}, \code{\link{gess}}
}
